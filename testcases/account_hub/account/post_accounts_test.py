# NOTE: Generated By HttpRunner v4.3.5
# FROM: .\testcases\account_hub\account\post_accounts.yml
import pytest

from httprunner import HttpRunner, Config, Step, RunRequest
from httprunner import Parameters


class TestCasePostAccounts(HttpRunner):
    @pytest.mark.parametrize(
        "param",
        Parameters(
            {
                "name-phone_number-email-fullname-nickname-pid-password-status_code-msg_code": [
                    ["手机号邮箱-设置密码-注册账号", 1, 1, "秦旺自动化", 1, "account", "123456", 200, 1],
                    ["手机号邮箱-不设置密码-注册账号", 1, 1, "秦旺自动化", 1, "account", "", 200, 1],
                    ["手机号注册账号", 1, 2, "秦旺自动化", 1, "account", "123456", 200, 1],
                    ["手机号已经注册", 3, 2, "秦旺自动化", 1, "account", "123456", 403, 2],
                    ["只传邮箱注册账号", 2, 1, "秦旺自动化", 1, "account", "123456", 200, 1],
                    ["邮箱已经注册账号", 1, 3, "秦旺自动化", 1, "account", "123456", 403, 3],
                    ["nickname 已经存在", 1, 1, "秦旺自动化", 2, "account", "123456", 403, 4],
                    ["nickname 不符合规则", 1, 1, "秦旺自动化", 3, "account", "123456", 400, 5],
                    ["PID传空 注册账号", 1, 1, "秦旺自动化", 1, "", "123456", 400, 6],
                ]
            }
        ),
    )
    def test_start(self, param):
        super().test_start(param)

    config = Config("/accounts 通用注册").base_url("${ENV(BASE_URL)}")

    teststeps = [
        Step(
            RunRequest("$name")
            .with_variables(**{"msg_date": "${return_random_string_2($msg_code)}"})
            .setup_hook("${setup_hook_dispose($request)}")
            .post("/accounts")
            .with_json(
                {
                    "phone_number": "${return_random_phone_number($phone_number)}",
                    "email": "${return_random_email($email)}",
                    "password": "$password",
                    "fullname": "$fullname",
                    "nickname": "${return_random_nickname($nickname)}",
                    "pid": "$pid",
                }
            )
            .validate()
            .assert_equal("status_code", "$status_code")
            .assert_contains("text", "$msg_date")
        ),
    ]


if __name__ == "__main__":
    TestCasePostAccounts().test_start()
