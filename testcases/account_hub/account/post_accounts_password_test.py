# NOTE: Generated By HttpRunner v4.3.5
# FROM: .\testcases\account_hub\account\post_accounts_password.yml
import pytest

from httprunner import HttpRunner, Config, Step, RunRequest
from httprunner import Parameters


class TestCasePostAccountsPassword(HttpRunner):
    @pytest.mark.parametrize(
        "param",
        Parameters(
            {
                "name-user_id-old_password-password-status_code-msg": [
                    ["通过旧密码更新密码-旧密码传空,修改密码", "$user", "", "123456", 422, "旧密码错误"],
                    ["通过旧密码更新密码-旧密码错误,修改密码", "$user", "987456", "123456", 422, "旧密码错误"],
                    [
                        "通过旧密码更新密码-新密码长度小于6位",
                        "$user",
                        "123456",
                        "123",
                        400,
                        "size must be between 6 and 20",
                    ],
                    [
                        "通过旧密码更新密码-新密码长度大于20位",
                        "$user",
                        "d2323220",
                        "123456789012345678901",
                        400,
                        "size must be between 6 and 20",
                    ],
                    ["通过旧密码更新密码-用户ID不存在", 100, "123456", "123456", 422, "用户需要有主账号"],
                    ["通过旧密码更新密码-通过旧密码修改成功", "$user", "123456", "1234567", 204, ""],
                ]
            }
        ),
    )
    def test_start(self, param):
        super().test_start(param)

    config = (
        Config("/accounts/password 通过旧密码更新密码")
        .variables(**{"url": "${ENV(BASE_URL)}", "user": "${accounts_password($url)}"})
        .base_url("${ENV(BASE_URL)}")
    )

    teststeps = [
        Step(
            RunRequest("$name")
            .post("/accounts/password")
            .with_json(
                {
                    "user_id": "$user_id",
                    "old_password": "$old_password",
                    "password": "$password",
                }
            )
            .validate()
            .assert_equal("status_code", "$status_code")
            .assert_contains("text", "$msg")
        ),
    ]


if __name__ == "__main__":
    TestCasePostAccountsPassword().test_start()
